// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a text template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------------
<#@ include file="Content.tth" #>
<#
    var assembly = Assembly.LoadFrom(Host.ResolvePath(assemblyFile));

    foreach (var namespaceGroup in FindContentSerializableTypes(assembly).GroupBy(t => t.Namespace)
                                                                         .OrderBy(g => g.Key))
    {
#>

namespace <#= namespaceGroup.Key #>
{
<#
    foreach (var type in namespaceGroup.OrderBy(t => GetContentClassConstructorName(t)))
    {
        var className = GetClassName(type);
        var classFullName = GetClassFullName(type);
        var members = FindContentSerializableMembers(type).OrderBy(m => m.Name).ToArray();
        var notSupportedByWindowsPhone = className.EndsWith("Effect") || className.EndsWith("EffectPart") ||
                                         className.StartsWith("Deferred");
        if (notSupportedByWindowsPhone)
        {
#>
#if !WINDOWS_PHONE
<#
        }
#>
    /// <summary>
    /// Content reader for <c><#= type.Name #></c>.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Reader.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    class <#= className #>Reader : Microsoft.Xna.Framework.Content.ContentTypeReader<<#= classFullName #>>
    {
        protected override <#= classFullName #> Read(Microsoft.Xna.Framework.Content.ContentReader input, <#= classFullName #> existingInstance)
        {
<#
    if (HasDefaultGraphicsDeviceConstructor(type))
    {
#>
            if (existingInstance == null)
            {
                var graphicsDeviceService = (Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService)input.ContentManager.ServiceProvider.GetService(
                                      typeof(Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService));
                existingInstance = new <#= className #>(graphicsDeviceService.GraphicsDevice);
            }
<#
    }
    else if (HasDefaultConstructor(type))
    {
#>
            if (existingInstance == null)
            {
                existingInstance = new <#= className #>();
            }
<#
    }
    foreach (var member in members)
    {
        var memberTypeName = GetMemberTypeName(member);
#>
            existingInstance.<#= member.Name #> = input.ReadObject<<#= memberTypeName #>>();
<#
    }
#>

            return existingInstance;
        }
    }
<#
        if (notSupportedByWindowsPhone)
        {
#>
#endif
<#
        }
    }
#>
}
<#
    }
#>