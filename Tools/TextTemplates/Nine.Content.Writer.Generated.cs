// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a text template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------------

#if !TEXT_TEMPLATE
namespace Nine.Content.Pipeline
{
    /// <summary>
    /// Content writer for <c>BounceCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class BounceCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.BounceCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.BounceCurve value)
        {
            output.Write(value.Strength);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.BounceCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.BounceCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Component</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class ComponentWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Component>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Component value)
        {
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.ComponentReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Component, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>CustomCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class CustomCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.CustomCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.CustomCurve value)
        {
            WriteObject(output, value, "Curve", value.Curve);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.CustomCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.CustomCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>ElasticCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class ElasticCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.ElasticCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.ElasticCurve value)
        {
            output.Write(value.Strength);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.ElasticCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.ElasticCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>ExponentialCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class ExponentialCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.ExponentialCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.ExponentialCurve value)
        {
            output.Write(value.Power);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.ExponentialCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.ExponentialCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Group</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class GroupWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Group>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Group value)
        {
            {
                output.Write(value.Children.Count);
                for (var i = 0; i < value.Children.Count; i++)
                    output.WriteObject(value.Children[i]);
            }
            WriteObject(output, value, "Animations", value.Animations);
            output.Write(value.Transform);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.GroupReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Group, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>LinearCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class LinearCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.LinearCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.LinearCurve value)
        {
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.LinearCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.LinearCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Scene</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class SceneWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Scene>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Scene value)
        {
            {
                output.Write(value.Children.Count);
                for (var i = 0; i < value.Children.Count; i++)
                    output.WriteObject(value.Children[i]);
            }
            WriteObject(output, value, "Animations", value.Animations);
            output.Write(value.Transform);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.SceneReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Scene, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>SinCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class SinCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.SinCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.SinCurve value)
        {
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.SinCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.SinCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>SmoothCurve</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class SmoothCurveWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.SmoothCurve>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.SmoothCurve value)
        {
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.SmoothCurveReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.SmoothCurve, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
}
namespace Nine.Content.Pipeline.Animations
{
    /// <summary>
    /// Content writer for <c>AnimationGroup</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class AnimationGroupWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.AnimationGroup>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.AnimationGroup value)
        {
            {
                output.Write(value.Animations.Count);
                for (var i = 0; i < value.Animations.Count; i++)
                    output.WriteObject(value.Animations[i]);
            }
            output.Write(value.Repeat);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationGroupReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationGroup, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>AnimationPlayer</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class AnimationPlayerWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.AnimationPlayer>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.AnimationPlayer value)
        {
            {
                output.Write(value.Animations.Count);
                foreach (var pair in value.Animations)
                {
                    output.WriteObject(pair.Key);
                    output.WriteObject(pair.Value);
                }
            }
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationPlayerReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationPlayer, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>AnimationSequence</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class AnimationSequenceWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.AnimationSequence>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.AnimationSequence value)
        {
            {
                output.Write(value.Animations.Count);
                for (var i = 0; i < value.Animations.Count; i++)
                    output.WriteObject(value.Animations[i]);
            }
            output.Write(value.Repeat);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationSequenceReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.AnimationSequence, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>BooleanAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class BooleanAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.BooleanAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.BooleanAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.BooleanAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.BooleanAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>ByteAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class ByteAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.ByteAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.ByteAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.ByteAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.ByteAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>CharAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class CharAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.CharAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.CharAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.CharAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.CharAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>ColorAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class ColorAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.ColorAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.ColorAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.ColorAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.ColorAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>DecimalAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class DecimalAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.DecimalAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.DecimalAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DecimalAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DecimalAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>DelayAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class DelayAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.DelayAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.DelayAnimation value)
        {
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DelayAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DelayAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>DoubleAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class DoubleAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.DoubleAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.DoubleAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DoubleAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.DoubleAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Int16Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Int16AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Int16Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Int16Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int16AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int16Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Int32Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Int32AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Int32Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Int32Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int32AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int32Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Int64Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Int64AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Int64Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Int64Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int64AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Int64Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>MatrixAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class MatrixAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.MatrixAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.MatrixAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.MatrixAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.MatrixAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>PointAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class PointAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.PointAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.PointAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.PointAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.PointAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>QuaternionAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class QuaternionAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.QuaternionAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.QuaternionAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.QuaternionAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.QuaternionAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>RectangleAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class RectangleAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.RectangleAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.RectangleAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.RectangleAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.RectangleAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>SingleAnimation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class SingleAnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.SingleAnimation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.SingleAnimation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.SingleAnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.SingleAnimation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>TweenAnimation`1</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class TweenAnimationWriter<T> : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.TweenAnimation<T>>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.TweenAnimation<T> value)
        {
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.TweenAnimationReader`1[" + string.Format("[{0}]", typeof(T).AssemblyQualifiedName) + "], Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.TweenAnimation`1[" + string.Format("[{0}]", typeof(T).AssemblyQualifiedName) + "], Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Vector2Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Vector2AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Vector2Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Vector2Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector2AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector2Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Vector3Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Vector3AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Vector3Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Vector3Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector3AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector3Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
    /// <summary>
    /// Content writer for <c>Vector4Animation</c>.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Writer.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter]
    partial class Vector4AnimationWriter : Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter<Nine.Animations.Vector4Animation>
    {
        protected override void Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, Nine.Animations.Vector4Animation value)
        {
            output.WriteObject(value.From);
            output.WriteObject(value.To);
            output.WriteObject(value.By);
            WriteObject(output, value, "Easing", value.Easing);
            WriteObject(output, value, "Curve", value.Curve);
            WriteObject(output, value, "Duration", value.Duration);
            WriteObject(output, value, "TargetProperty", value.TargetProperty);
            output.WriteObject(value.BeginTime);
            output.WriteObject(value.EndTime);
            output.Write(value.Speed);
            output.Write(value.AutoReverse);
            WriteObject(output, value, "StartupDirection", value.StartupDirection);
            WriteObject(output, value, "Direction", value.Direction);
            output.Write(value.Repeat);
            WriteObject(output, value, "Position", value.Position);
            WriteObject(output, value, "Name", value.Name);
            WriteObject(output, value, "Tag", value.Tag);
            WriteObject(output, value, "AttachedProperties", value.AttachedProperties);
        }
        
        private void WriteObject(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter output, System.Object parent, string member, System.Object value)
        {
            var propertyInstance = new Nine.Content.Pipeline.Xaml.PropertyInstance(parent, member);
            var serializationData = Nine.Content.Pipeline.Xaml.XamlSerializer.SerializationData;
            if (serializationData.ContainsKey(propertyInstance))
                output.WriteObject(serializationData[propertyInstance]);
            else
                output.WriteObject(value);
        }

        public override string GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector4AnimationReader, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }

        public override string GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform targetPlatform)
        {
            return "Nine.Animations.Vector4Animation, Nine, Version=1.4.0.0, Culture=neutral, PublicKeyToken=ed8336b5652212a9";
        }
    }
}
#endif