// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a text template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------------
<#@ include file="Content.tth" #>
<#@ include file="Document.tth" #>
<#
    var assembly = Assembly.LoadFrom(Host.ResolvePath(assemblyFile));
    var assemblyDoc = OpenAssemblyXmlDocument(Host.ResolvePath(assemblyDocumentFile));
    
    foreach (var namespaceGroup in FindContentSerializableTypes(assembly).GroupBy(t => GetContentPipelineNamespace(t))
                                                                         .OrderBy(g => g.Key))
    {
#>

namespace <#= namespaceGroup.Key #>
{
<#
    foreach (var type in namespaceGroup.OrderBy(t => GetContentClassConstructorName(t)))
    {
        var className = GetContentClassName(type);
        var classConstructorName = GetContentClassConstructorName(type);
        var members = FindContentSerializableMembers(type).OrderBy(m => m.Name).ToArray();
#>
    /// <summary>
    /// Content model for <c><#= type.Name #></c>.
    /// <#= GetSummary(assemblyDoc, type.FullName) #>
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.1.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("<#= type.FullName #>, <#= assembly.GetName().Name #>")]
    public partial class <#= className #>
    {
<#
    foreach (var member in members)
    {
        var defaultValue = TryGetDefaultValue(type, member);
        var defaultValueString = TryGetDefaultValueString(type, member);
        var hasDefaultValue = !string.IsNullOrEmpty(defaultValueString);
        var memberTypeName = GetMemberContentTypeName(member);
#>
        /// <summary>
        /// <#= GetSummary(assemblyDoc, member.Name).Replace("Gets or sets", "Gets").Replace("Gets", "Gets or sets") #>
        /// <summary>
<# if (hasDefaultValue) { #>
        [System.ComponentModel.DefaultValue("<#= defaultValueString #>")]
<# } #>
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public <#= memberTypeName #> <#= member.Name #> { get; <# if (!CanSetMember(member)) { #> internal <# } #>set; }

<#
    }
#>
        /// <summary>
        /// Initializes a new instance of <c><#= classConstructorName #></c>.
        /// <summary>
        public <#= classConstructorName #>()
        {
<#
    foreach (var member in members)
    {
        var defaultValue = TryGetDefaultValue(type, member);
        var defaultValueString = TryGetDefaultValueString(type, member);
        var hasDefaultValue = !string.IsNullOrEmpty(defaultValueString);
        var memberType = GetMemberType(member);
        var memberTypeName = GetMemberContentTypeName(member);
        if (hasDefaultValue)
        {
#>
            <#= member.Name #> = (<#= memberTypeName #>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(<#= memberTypeName #>)).ConvertFromString("<#= defaultValueString #>");
<#
        }
        else if (IsCollection(memberType) || IsDictionary(memberType) || HasDefaultPublicConstructor(memberType))
        {
#>
            <#= member.Name #> = new <#= memberTypeName #>();
<#
        }
        else if (memberType == typeof(Matrix))
        {
#>
            <#= member.Name #> = new <#= memberTypeName #>(<#= ((Matrix)defaultValue).M11#>f, <#= ((Matrix)defaultValue).M12#>f, <#= ((Matrix)defaultValue).M13#>f, <#= ((Matrix)defaultValue).M14#>f, <#= ((Matrix)defaultValue).M21#>f, <#= ((Matrix)defaultValue).M22#>f, <#= ((Matrix)defaultValue).M23#>f, <#= ((Matrix)defaultValue).M24#>f,<#= ((Matrix)defaultValue).M31#>f, <#= ((Matrix)defaultValue).M32#>f, <#= ((Matrix)defaultValue).M33#>f, <#= ((Matrix)defaultValue).M34#>f, <#= ((Matrix)defaultValue).M41#>f, <#= ((Matrix)defaultValue).M42#>f, <#= ((Matrix)defaultValue).M43#>f, <#= ((Matrix)defaultValue).M44#>f);
<#
        }
    }
#>
        }
    }
<#
    }
#>
}
<#
    }
#>