<UserControl x:Class="Nine.Studio.Shell.Windows.Library"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:n="http://schemas.microsoft.com/nine/2011/xaml"
             xmlns:my="clr-namespace:Nine.Studio.Shell"
             xmlns:sys="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended">

    <UserControl.Resources>
        <CollectionViewSource x:Key="ProjectItemsViewSource" Source="{Binding ActiveProject.ProjectItems}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="ProjectItem.Metadata.Category" />
            </CollectionViewSource.GroupDescriptions>            
        </CollectionViewSource>
    </UserControl.Resources>
    
    <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
        <wpf:WatermarkTextBox x:Name="SearchTextBox" TextChanged="SearchTextBox_TextChanged" Watermark="{x:Static my:Strings.Search}" Style="{DynamicResource WatermarkTextBox-Metro}"/>
        
        <ListView x:Name="ProjectItemsList" Style="{StaticResource ListView-Tools}"
                      ItemsSource="{Binding Source={StaticResource ProjectItemsViewSource}}"
                      n:GroupStyleBehavior.GroupStyle="{StaticResource GroupStyle-Metro}"
                      n:ResourceBehavior.Resource="{StaticResource ListViewItem-Tools}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource Button-ToolsMenu}" Content="{Binding Name}" Command="{Binding ShowCommand}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <!--
                <ComboBox Margin="0, 2" ItemsSource="{Binding ReferencedProjects}" DisplayMemberPath="Name"
                          SelectedItem="{Binding SelectedProject, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True"
                          Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                </ComboBox>
                -->
    </StackPanel>
    <!--
            <DockPanel>
                <DockPanel.ContextMenu>
                    <ContextMenu Opened="ContextMenu_Opened" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                        <MenuItem Header="{x:Static local:Strings.AddNewItem}" IsEnabled="{Binding DocumentFactories.Count}"
                                              ItemsSource="{Binding DocumentFactories}" ItemContainerStyle="{StaticResource NewItemContainerStyle}" />
                        <MenuItem Header="{x:Static local:Strings.Import}" IsEnabled="{Binding Importers.Count}" 
                                              ItemsSource="{Binding Importers}" ItemContainerStyle="{StaticResource ImportersContainerStyle}" />
                    </ContextMenu>
                </DockPanel.ContextMenu>
                <ListView x:Name="Documents" Margin="0, 2" ItemsSource="{Binding ProjectView.Documents}">
                    <ListView.CommandBindings>
                        <CommandBinding Command="Delete" CanExecute="CanDelete" Executed="ExecuteDelete" />
                    </ListView.CommandBindings>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ShowCommand}" />
                                </StackPanel.InputBindings>
                                <StackPanel.ContextMenu>
                                    <ContextMenu Opened="ContextMenu_Opened" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                                        <MenuItem Header="{x:Static local:Strings.AddNewItem}" IsEnabled="{Binding DocumentTypes.Count}"
                                                  ItemsSource="{Binding DocumentTypes}" ItemContainerStyle="{StaticResource NewItemContainerStyle}" />
                                        <MenuItem Header="{x:Static local:Strings.Import}" IsEnabled="{Binding Importers.Count}" 
                                                  ItemsSource="{Binding Importers}" ItemContainerStyle="{StaticResource ImportersContainerStyle}" />
                                        <Separator />
                                        <MenuItem Header="{x:Static local:Strings.Rename}"/>
                                        <MenuItem Command="Cut" Header="{x:Static local:Strings.Cut}" />
                                        <MenuItem Command="Copy" Header="{x:Static local:Strings.Copy}" />
                                        <MenuItem Command="Paste" Header="{x:Static local:Strings.Paste}" />
                                        <MenuItem Command="Delete" Header="{x:Static local:Strings.Delete}" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </DockPanel>
            -->

</UserControl>
