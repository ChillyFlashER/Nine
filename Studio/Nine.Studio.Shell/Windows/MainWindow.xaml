<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:nine="clr-namespace:Nine.Studio.Shell.Behaviors"
    xmlns:ctrl="clr-namespace:Nine.Studio.Shell.Windows"
    xmlns:my="clr-namespace:Nine.Studio.Shell"        
    xmlns:sys="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
    mc:Ignorable="d" x:Class="Nine.Studio.Shell.Windows.MainWindow" x:Name="Window" Title="{Binding Title}"
    Width="1280" Height="720" Background="Black" WindowStartupLocation="CenterScreen" AllowDrop="True"
    WindowStyle="None" Icon="/Images/Nine.ico" MinWidth="800" MinHeight="600">

    <Window.Resources>
        <nine:CommandReference x:Key="HelpCommandReference" Command="{Binding HelpCommand}" />
        <nine:CommandReference x:Key="NewCommandReference" Command="{Binding NewCommand}" />
        <nine:CommandReference x:Key="OpenCommandReference" Command="{Binding OpenCommand}" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{StaticResource HelpCommandReference}" />
        <KeyBinding Key="N" Modifiers="Control" Command="{StaticResource NewCommandReference}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{StaticResource OpenCommandReference}" />
    </Window.InputBindings>

    <nine:WindowChrome.WindowChrome>
        <nine:WindowChrome GlassFrameThickness="-1" ResizeBorderThickness="4" CaptionHeight="36" />
    </nine:WindowChrome.WindowChrome>

    <Grid x:Name="LayoutRoot">
        <Grid.Background>
            <RadialGradientBrush Center="0.504,0.83" GradientOrigin="0.504,0.83" RadiusY="0.891" RadiusX="0.573">
                <GradientStop Color="#FF11090F" Offset="0.992"/>
                <GradientStop Color="#FF403D3F"/>
            </RadialGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="100"/>
        </Grid.ColumnDefinitions>

        <ContentControl x:Name="EditorCanvas" Content="{Binding ActiveProjectItem, Converter={StaticResource ProjectItemViewToControlConverter}}" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=LayoutRoot}" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}" />
        
        <Rectangle x:Name="EditorCanvasMask" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=LayoutRoot}" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}" />
        
        <StackPanel x:Name="SettingAndHelp" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Button x:Name="SettingsButton" Content="{x:Static my:Strings.Settings}" Style="{StaticResource Button-Minimum}" nine:WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Separator Height="8" Style="{StaticResource Separator-Vertical}" VerticalAlignment="Center" Width="1"/>
            <Button x:Name="HelpButton" Content="{x:Static my:Strings.Help}" Command="{Binding HelpCommand}" Style="{StaticResource Button-Minimum}" nine:WindowChrome.IsHitTestVisibleInChrome="True"/>
        </StackPanel>
        
        <StackPanel x:Name="WindowsButtons" Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,0">
            <Button x:Name="MinimizeButton" Content="Button" Grid.Column="2" Style="{StaticResource Button-Minimize}" nine:WindowChrome.IsHitTestVisibleInChrome="True" Click="ButtonMinimize_Click" Width="20" Height="20" />
            <Button x:Name="MaximizeButton" Content="Button" Grid.Column="2" Style="{StaticResource Button-Maximized}" nine:WindowChrome.IsHitTestVisibleInChrome="True" Click="ButtonMaximize_Click" Width="20" Height="20" />
            <Button x:Name="ExitButton" Content="Button" Grid.Column="2" Style="{StaticResource Button-Close}" nine:WindowChrome.IsHitTestVisibleInChrome="True" Click="ButtonClose_Click" Width="20" Height="20" />
        </StackPanel>

        <StackPanel x:Name="MainMenu" Grid.Row="1" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}" HorizontalAlignment="Left" Orientation="Horizontal">
            <RadioButton x:Name="FileButton" Content="{x:Static my:Strings.Nine}" IsChecked="True" Style="{StaticResource RadioButton-Product}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <RadioButton x:Name="CreateButton" Content="{x:Static my:Strings.Create}" Visibility="{Binding Factories.Count, Converter={StaticResource IntToVisibilityConverter}}" Style="{StaticResource RadioButton-Menu}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <RadioButton x:Name="EditButton" Content="{x:Static my:Strings.Edit}" Visibility="{Binding Tools.Count, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource RadioButton-Menu}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <RadioButton x:Name="ViewButton" Content="{x:Static my:Strings.View}" Visibility="{Binding ActiveProject, Converter={StaticResource NullToVisibilityConverter}}" Style="{StaticResource RadioButton-Menu}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <RadioButton x:Name="SceneButton" Content="{x:Static my:Strings.Scene}" Visibility="{Binding ActiveProject, Converter={StaticResource NullToVisibilityConverter}}" Style="{StaticResource RadioButton-Menu}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <RadioButton x:Name="LibraryButton" Content="{x:Static my:Strings.Library}" Visibility="{Binding ActiveProject, Converter={StaticResource NullToVisibilityConverter}}" Style="{StaticResource RadioButton-Menu}" GroupName="MainMenu" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
            <ToggleButton x:Name="PropertiesButton" Visibility="{Binding ActiveProject, Converter={StaticResource NullToVisibilityConverter}}" Content="{x:Static my:Strings.Properties}" Style="{StaticResource ToggleButton-Menu}" nine:WindowChrome.IsHitTestVisibleInChrome="True" Background="{x:Null}" />
            <Button x:Name="PlayButton" Visibility="{Binding ActiveProject, Converter={StaticResource NullToVisibilityConverter}}" Content="{x:Static my:Strings.Play}" Style="{StaticResource Button-Menu}" nine:WindowChrome.IsHitTestVisibleInChrome="True" />
        </StackPanel>

        <StackPanel x:Name="ToolsMenu" Grid.Row="3" Grid.Column="0" Margin="50,20,0,50">
            <StackPanel.Resources>
                <!-- CollectionViewSource for Create -->
                <CollectionViewSource x:Key="FactoriesViewSource" Source="{Binding Factories}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Metadata.Category" />
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>

                <!-- CollectionViewSource for Files -->
                <CollectionViewSource x:Key="FilesViewSource">
                    <CollectionViewSource.GroupDescriptions>
                        <nine:NamedGroupDescription GroupName="{x:Static my:Strings.File}" />
                    </CollectionViewSource.GroupDescriptions>                    
                    <CollectionViewSource.Source>
                        <sys:ArrayList>
                            <Button x:Name="NewButton" Command="{Binding EditorView.NewCommand, ElementName=Window}" Style="{StaticResource Button-ToolsMenu}" Content="{x:Static my:Strings.New}" />
                            <Button x:Name="OpenButton" Command="{Binding EditorView.OpenCommand, ElementName=Window}" Style="{StaticResource Button-ToolsMenu}" Content="{x:Static my:Strings.Open}" />
                            <Button x:Name="SaveButton" Command="{Binding EditorView.SaveCommand, ElementName=Window}" Style="{StaticResource Button-ToolsMenu}" Content="{x:Static my:Strings.Save}" />
                            <Button x:Name="CloseButton" Command="{Binding EditorView.CloseCommand, ElementName=Window}" Style="{StaticResource Button-ToolsMenu}" Content="{x:Static my:Strings.Close}" />
                        </sys:ArrayList>
                    </CollectionViewSource.Source>
                </CollectionViewSource>
                
                <!-- CollectionViewSource for Importers -->
                <CollectionViewSource x:Key="ImportersViewSource" Source="{Binding Importers}">
                    <CollectionViewSource.GroupDescriptions>
                        <nine:NamedGroupDescription GroupName="{x:Static my:Strings.Import}" />
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
                
                <!-- CollectionViewSource for Recent Files -->
                <CollectionViewSource x:Key="RecentProjectsViewSource" Source="{Binding RecentProjects}">
                    <CollectionViewSource.GroupDescriptions>
                        <nine:NamedGroupDescription GroupName="{x:Static my:Strings.Recent}" />
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
            </StackPanel.Resources>

            <ListView x:Name="FileMenu" Style="{StaticResource ListView-Tools}" 
                      ItemsSource="{Binding Source={StaticResource FilesViewSource}}"
                      Visibility="{Binding IsChecked, ElementName=FileButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                      nine:GroupStyleBehavior.GroupStyle="{StaticResource GroupStyle-Metro}"
                      nine:ResourceBehavior.Resource="{StaticResource ListViewItem-Tools}">
            </ListView>

            <ListView x:Name="ImportMenu" Style="{StaticResource ListView-Tools}" 
                      ItemsSource="{Binding Source={StaticResource ImportersViewSource}}"
                      Visibility="{Binding IsChecked, ElementName=FileButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                      nine:GroupStyleBehavior.GroupStyle="{StaticResource GroupStyle-Metro}"
                      nine:ResourceBehavior.Resource="{StaticResource ListViewItem-Tools}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource Button-ToolsMenu}" Content="{Binding Metadata.DisplayName}" Command="{Binding ImportCommand}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
            <ListView x:Name="RecentProjectsMenu" Style="{StaticResource ListView-Tools}" 
                      ItemsSource="{Binding Source={StaticResource RecentProjectsViewSource}}"
                      Visibility="{Binding IsChecked, ElementName=FileButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                      nine:GroupStyleBehavior.GroupStyle="{StaticResource GroupStyle-Metro}"
                      nine:ResourceBehavior.Resource="{StaticResource ListViewItem-Tools}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource Button-ToolsMenu}" Content="{Binding Converter={StaticResource TruncatePathConverter}}"
                                Command="{Binding EditorView.OpenCommand, ElementName=Window}" CommandParameter="{Binding}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <ListView x:Name="CreateMenu" Style="{StaticResource ListView-Tools}" 
                      ItemsSource="{Binding Source={StaticResource FactoriesViewSource}}"
                      Visibility="{Binding IsChecked, ElementName=CreateButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                      nine:GroupStyleBehavior.GroupStyle="{StaticResource GroupStyle-Metro}"
                      nine:ResourceBehavior.Resource="{StaticResource ListViewItem-Tools}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource Button-ToolsMenu}" Content="{Binding}" Command="{Binding NewCommand}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <ctrl:Library x:Name="LibraryMenu" Visibility="{Binding IsChecked, ElementName=LibraryButton, Converter={StaticResource BooleanToVisibilityConverter}}"  />
            
        </StackPanel>

        <!--
        <StackPanel Grid.Row="3" Grid.Column="1" Width="300"  Margin="0,50,50,50">
            <wpf:WatermarkTextBox Watermark="{x:Static my:Strings.SearchProperties}" nine:HeaderBehavior.Header="FileName" Style="{DynamicResource WatermarkTextBox-Metro}"/>
            <Rectangle Height="10" />
            <wpf:ColorCanvas nine:HeaderBehavior.Header="Diffuse Color" Style="{StaticResource ColorCanvas-Metro}"/>
            <Rectangle Height="10" />
            <Slider nine:HeaderBehavior.Header="Intensity" Height="30" Style="{DynamicResource Slider-Metro}"/>
            <Rectangle Height="10" />
            <ProgressBar Style="{StaticResource ProgressBar-Metro}" Value="60" />
            <Rectangle Height="10" />
            <ProgressBar Style="{StaticResource ProgressBar-Metro}" Value="60" IsIndeterminate="True"/>
        </StackPanel>
        -->
        <DockPanel x:Name="PropertiesMenu" Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" Margin="0,20,50,50">
            <wpf:PropertyGrid x:Name="PropertyGrid" SelectedObject="{Binding SelectedObject}" Style="{StaticResource PropertyGrid-Metro}"
                              Visibility="{Binding IsChecked, ElementName=PropertiesButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </DockPanel>
        <Grid x:Name="DialogContainer" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=LayoutRoot}" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}"/>
        <Border x:Name="ClientBorder" BorderThickness="1" BorderBrush="{StaticResource Brush-Accent}" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=LayoutRoot}" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}" d:IsLocked="True" />
        <Grid x:Name="StatusBar" Grid.Row="5" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=LayoutRoot}" Background="{StaticResource Brush-Accent}">
            
        </Grid>
        <!--
        
        
        <wpf:WatermarkTextBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Margin="0,0,50,0" Watermark="{x:Static my:Strings.SearchProperties}" Style="{DynamicResource WatermarkTextBox-Metro}" />
-->
    </Grid>
</Window>