// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a text template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------------



namespace Nine.Content.Pipeline.Animations
{
    /// <summary>
    /// Content model for <c>BoneAnimationClip</c>.
    /// Defines a bone animation clip.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Animations.BoneAnimationClip, Nine")]
    public partial class BoneAnimationClipContent
    {
        /// <summary>
        /// Gets or sets animation frame rate.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 FramesPerSecond { get; set; }

        /// <summary>
        /// Gets or sets the preferred ending style.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Animations.KeyframeEnding PreferredEnding { get; set; }

        /// <summary>
        /// Gets or sets total number of frames.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 TotalFrames { get; set; }

        /// <summary>
        /// Gets or sets all the channels in this animation clip.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Matrix[][] Transforms { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>BoneAnimationClipContent</c>.
        /// <summary>
        public BoneAnimationClipContent()
        {
            //FramesPerSecond = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
            //PreferredEnding = (Nine.Animations.KeyframeEnding)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Animations.KeyframeEnding)).ConvertFromString("");;
            //TotalFrames = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
            //Transforms = (Microsoft.Xna.Framework.Matrix[][])System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Matrix[][])).ConvertFromString("");;
        }
    }
}

namespace Nine.Content.Pipeline.Graphics
{
    /// <summary>
    /// Content model for <c>Geometry</c>.
    /// Geometric representation of a model.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Geometry, Nine")]
    public partial class GeometryContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.BoundingBox BoundingBox { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.BoundingSphere BoundingSphere { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.UInt16[] Indices { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3[] Positions { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>GeometryContent</c>.
        /// <summary>
        public GeometryContent()
        {
            //BoundingBox = (Microsoft.Xna.Framework.BoundingBox)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.BoundingBox)).ConvertFromString("");;
            //BoundingSphere = (Microsoft.Xna.Framework.BoundingSphere)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.BoundingSphere)).ConvertFromString("");;
            //Indices = (System.UInt16[])System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.UInt16[])).ConvertFromString("");;
            //Positions = (Microsoft.Xna.Framework.Vector3[])System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3[])).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>Heightmap</c>.
    /// The geometric representation of heightmap.  The up axis of the terrain is Vector.UnitZ.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Heightmap, Nine")]
    public partial class HeightmapContent
    {
        /// <summary>
        /// Gets or sets the axis aligned bounding box of this terrain.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.BoundingBox BoundingBox { get; set; }

        /// <summary>
        /// Gets or sets the number of the smallest square block in Y axis, or heightmap texture V axis.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 Height { get; set; }

        /// <summary>
        /// Gets or sets the heights of all terrain points.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single[] Heights { get; set; }

        /// <summary>
        /// Gets or sets the normals of all terrain points.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3[] Normals { get; set; }

        /// <summary>
        /// Gets or sets the size of the terrain geometry in 3 axis.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Size { get; set; }

        /// <summary>
        /// Gets or sets the size of the smallest square block that made up the terrain.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Step { get; set; }

        /// <summary>
        /// Gets or sets any user data.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Object Tag { get; set; }

        /// <summary>
        /// Gets or sets the tangents of all terrain points.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3[] Tangents { get; set; }

        /// <summary>
        /// Gets or sets the number of the smallest square block in X axis, or heightmap texture U axis.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 Width { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>HeightmapContent</c>.
        /// <summary>
        public HeightmapContent()
        {
            //BoundingBox = (Microsoft.Xna.Framework.BoundingBox)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.BoundingBox)).ConvertFromString("");;
            //Height = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
            //Heights = (System.Single[])System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single[])).ConvertFromString("");;
            //Normals = (Microsoft.Xna.Framework.Vector3[])System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3[])).ConvertFromString("");;
            //Size = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Step = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Tag = (System.Object)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Object)).ConvertFromString("");;
            //Tangents = (Microsoft.Xna.Framework.Vector3[])System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3[])).ConvertFromString("");;
            //Width = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ModelCollision</c>.
    /// Defines a octree base model collision detection.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ModelCollision, Nine")]
    public partial class ModelCollisionContent
    {
        /// <summary>
        /// Gets or sets the collision tree.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Octree<System.Boolean> CollisionTree { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ModelCollisionContent</c>.
        /// <summary>
        public ModelCollisionContent()
        {
            //CollisionTree = (Nine.Octree<System.Boolean>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Octree<System.Boolean>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ModelMeshPartTag</c>.
    /// Tag used by ModelMeshPart.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ModelMeshPartTag, Nine")]
    public partial class ModelMeshPartTagContent
    {
        /// <summary>
        /// Gets or sets the additional textures (E.g. normalmap) attached to the ModelMeshPart.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Collections.Generic.Dictionary<System.String,Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent>> Textures { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ModelMeshPartTagContent</c>.
        /// <summary>
        public ModelMeshPartTagContent()
        {
            //Textures = (System.Collections.Generic.Dictionary<System.String,Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent>>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Collections.Generic.Dictionary<System.String,Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent>>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ModelSkinning</c>.
    /// Combines all the data needed to render and animate a skinned object. This is typically stored in the Tag property of the Model being animated.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ModelSkinning, Nine")]
    public partial class ModelSkinningContent
    {
        /// <summary>
        /// Vertex to bonespace transforms for each bone in the skeleton.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Collections.Generic.List<Microsoft.Xna.Framework.Matrix> InverseBindPose { get; set; }

        /// <summary>
        /// Index of the skeleton root on the parent mesh bone collection.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 SkeletonIndex { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ModelSkinningContent</c>.
        /// <summary>
        public ModelSkinningContent()
        {
            //InverseBindPose = (System.Collections.Generic.List<Microsoft.Xna.Framework.Matrix>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Collections.Generic.List<Microsoft.Xna.Framework.Matrix>)).ConvertFromString("");;
            //SkeletonIndex = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ModelTag</c>.
    /// Tag used by models.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ModelTag, Nine")]
    public partial class ModelTagContent
    {
        /// <summary>
        /// Gets or sets the animation data attached to the model.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Collections.Generic.Dictionary<System.String,Nine.Animations.BoneAnimationClip> Animations { get; set; }

        /// <summary>
        /// Gets or sets the collision data attached to the model.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Graphics.ModelCollision Collision { get; set; }

        /// <summary>
        /// Gets or sets the skinning data attached to the model.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Graphics.ModelSkinning Skinning { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ModelTagContent</c>.
        /// <summary>
        public ModelTagContent()
        {
            //Animations = (System.Collections.Generic.Dictionary<System.String,Nine.Animations.BoneAnimationClip>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Collections.Generic.Dictionary<System.String,Nine.Animations.BoneAnimationClip>)).ConvertFromString("");;
            //Collision = (Nine.Graphics.ModelCollision)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Graphics.ModelCollision)).ConvertFromString("");;
            //Skinning = (Nine.Graphics.ModelSkinning)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Graphics.ModelSkinning)).ConvertFromString("");;
        }
    }
}

namespace Nine.Content.Pipeline.Graphics.Effects.EffectParts
{
    /// <summary>
    /// Content model for <c>AmbientLightEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.AmbientLightEffectPart, Nine")]
    public partial class AmbientLightEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 AmbientLightColor { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>AmbientLightEffectPartContent</c>.
        /// <summary>
        public AmbientLightEffectPartContent()
        {
            //AmbientLightColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>BasicTextureEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.BasicTextureEffectPart, Nine")]
    public partial class BasicTextureEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> Texture { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>BasicTextureEffectPartContent</c>.
        /// <summary>
        public BasicTextureEffectPartContent()
        {
            //Texture = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ColorMatrixEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.ColorMatrixEffectPart, Nine")]
    public partial class ColorMatrixEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Matrix Transform { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ColorMatrixEffectPartContent</c>.
        /// <summary>
        public ColorMatrixEffectPartContent()
        {
            //Transform = (Microsoft.Xna.Framework.Matrix)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Matrix)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>DirectionalLightEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.DirectionalLightEffectPart, Nine")]
    public partial class DirectionalLightEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 DiffuseColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 SpecularColor { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>DirectionalLightEffectPartContent</c>.
        /// <summary>
        public DirectionalLightEffectPartContent()
        {
            //DiffuseColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //SpecularColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>DualTextureEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.DualTextureEffectPart, Nine")]
    public partial class DualTextureEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> Texture { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>DualTextureEffectPartContent</c>.
        /// <summary>
        public DualTextureEffectPartContent()
        {
            //Texture = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>FogEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.FogEffectPart, Nine")]
    public partial class FogEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 FogColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single FogEnd { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single FogStart { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>FogEffectPartContent</c>.
        /// <summary>
        public FogEffectPartContent()
        {
            //FogColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //FogEnd = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //FogStart = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>LightEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.LightEffectPart, Nine")]
    public partial class LightEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 DiffuseColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 EmissiveColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 SpecularColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single SpecularPower { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>LightEffectPartContent</c>.
        /// <summary>
        public LightEffectPartContent()
        {
            //DiffuseColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //EmissiveColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //SpecularColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //SpecularPower = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>NormalMapEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.NormalMapEffectPart, Nine")]
    public partial class NormalMapEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> NormalMap { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>NormalMapEffectPartContent</c>.
        /// <summary>
        public NormalMapEffectPartContent()
        {
            //NormalMap = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>OverlayTextureEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.OverlayTextureEffectPart, Nine")]
    public partial class OverlayTextureEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> Texture { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>OverlayTextureEffectPartContent</c>.
        /// <summary>
        public OverlayTextureEffectPartContent()
        {
            //Texture = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>PointLightEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.PointLightEffectPart, Nine")]
    public partial class PointLightEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Attenuation { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 DiffuseColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Position { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Range { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 SpecularColor { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>PointLightEffectPartContent</c>.
        /// <summary>
        public PointLightEffectPartContent()
        {
            //Attenuation = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //DiffuseColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Position = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Range = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //SpecularColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ShadowMapEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.ShadowMapEffectPart, Nine")]
    public partial class ShadowMapEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single DepthBias { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single ShadowIntensity { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ShadowMapEffectPartContent</c>.
        /// <summary>
        public ShadowMapEffectPartContent()
        {
            //DepthBias = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //ShadowIntensity = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SkinTransformEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.SkinTransformEffectPart, Nine")]
    public partial class SkinTransformEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 MaxBones { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Int32 WeightsPerVertex { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SkinTransformEffectPartContent</c>.
        /// <summary>
        public SkinTransformEffectPartContent()
        {
            //MaxBones = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
            //WeightsPerVertex = (System.Int32)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Int32)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SplatterTextureEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.SplatterTextureEffectPart, Nine")]
    public partial class SplatterTextureEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> SplatterTexture { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector2 SplatterTextureScale { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> TextureW { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> TextureX { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> TextureY { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent> TextureZ { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SplatterTextureEffectPartContent</c>.
        /// <summary>
        public SplatterTextureEffectPartContent()
        {
            //SplatterTexture = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
            //SplatterTextureScale = (Microsoft.Xna.Framework.Vector2)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector2)).ConvertFromString("");;
            //TextureW = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
            //TextureX = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
            //TextureY = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
            //TextureZ = (Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Content.Pipeline.ContentReference<Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SpotLightEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.SpotLightEffectPart, Nine")]
    public partial class SpotLightEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Attenuation { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 DiffuseColor { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Falloff { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single InnerAngle { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single OuterAngle { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Position { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Range { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 SpecularColor { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SpotLightEffectPartContent</c>.
        /// <summary>
        public SpotLightEffectPartContent()
        {
            //Attenuation = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //DiffuseColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Falloff = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //InnerAngle = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //OuterAngle = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Position = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Range = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //SpecularColor = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>TextureTransformEffectPart</c>.
    /// 
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.Effects.EffectParts.TextureTransformEffectPart, Nine")]
    public partial class TextureTransformEffectPartContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Matrix Transform { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>TextureTransformEffectPartContent</c>.
        /// <summary>
        public TextureTransformEffectPartContent()
        {
            //Transform = (Microsoft.Xna.Framework.Matrix)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Matrix)).ConvertFromString("");;
        }
    }
}

namespace Nine.Content.Pipeline.Graphics.ParticleEffects
{
    /// <summary>
    /// Content model for <c>AbsorbController</c>.
    /// Defines a basic controller that absorbs the particles to a given point.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.AbsorbController, Nine")]
    public partial class AbsorbControllerContent
    {
        /// <summary>
        /// Gets or sets the absorb force.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Force { get; set; }

        /// <summary>
        /// Gets or sets the absorb position.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Position { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>AbsorbControllerContent</c>.
        /// <summary>
        public AbsorbControllerContent()
        {
            //Force = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Position = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>BoxEmitter</c>.
    /// Defines a point emitter that emit particles from a box in 3D space.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.BoxEmitter, Nine")]
    public partial class BoxEmitterContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.BoundingBox Box { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Spread { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Nullable<Microsoft.Xna.Framework.Matrix> Transform { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>BoxEmitterContent</c>.
        /// <summary>
        public BoxEmitterContent()
        {
            //Box = (Microsoft.Xna.Framework.BoundingBox)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.BoundingBox)).ConvertFromString("");;
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Spread = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Transform = (System.Nullable<Microsoft.Xna.Framework.Matrix>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Nullable<Microsoft.Xna.Framework.Matrix>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ColorController</c>.
    /// Defines a basic controller that changes the color of the particle effect based on time.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.ColorController, Nine")]
    public partial class ColorControllerContent
    {
        /// <summary>
        /// Range of values controlling the particle end color and alpha.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Range<Microsoft.Xna.Framework.Color> EndColor { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ColorControllerContent</c>.
        /// <summary>
        public ColorControllerContent()
        {
            //EndColor = (Nine.Range<Microsoft.Xna.Framework.Color>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Range<Microsoft.Xna.Framework.Color>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>CylinderEmitter</c>.
    /// Defines a point emitter that emit particles from a cylinder in 3D space.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.CylinderEmitter, Nine")]
    public partial class CylinderEmitterContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Center { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Height { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Boolean Radiate { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Radius { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Boolean Shell { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Spread { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Up { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>CylinderEmitterContent</c>.
        /// <summary>
        public CylinderEmitterContent()
        {
            //Center = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Height = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Radiate = (System.Boolean)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Boolean)).ConvertFromString("");;
            //Radius = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Shell = (System.Boolean)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Boolean)).ConvertFromString("");;
            //Spread = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Up = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ForceController</c>.
    /// Defines a basic controller that applies a constant linear force on the particle effect.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.ForceController, Nine")]
    public partial class ForceControllerContent
    {
        /// <summary>
        /// Gets or sets the force amount.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Force { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ForceControllerContent</c>.
        /// <summary>
        public ForceControllerContent()
        {
            //Force = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>LineEmitter</c>.
    /// Defines a point emitter that emit particles from a list of lines in 3D space.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.LineEmitter, Nine")]
    public partial class LineEmitterContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Vector3> LineList { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Spread { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>LineEmitterContent</c>.
        /// <summary>
        public LineEmitterContent()
        {
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //LineList = (System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Vector3>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Vector3>)).ConvertFromString("");;
            //Spread = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>ParticleController</c>.
    /// Defines the base class for all particle controllers.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.ParticleController, Nine")]
    public partial class ParticleControllerContent
    {
        /// <summary>
        /// Gets or sets whether this emitter is enabled.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Boolean Enabled { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>ParticleControllerContent</c>.
        /// <summary>
        public ParticleControllerContent()
        {
            //Enabled = (System.Boolean)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Boolean)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>PointEmitter</c>.
    /// Defines a point emitter that emit particles from a point in 3D space.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.PointEmitter, Nine")]
    public partial class PointEmitterContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Position { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Spread { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>PointEmitterContent</c>.
        /// <summary>
        public PointEmitterContent()
        {
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Position = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Spread = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>RotationController</c>.
    /// Defines a basic controller that changes the rotation of the particle effect based on time.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.RotationController, Nine")]
    public partial class RotationControllerContent
    {
        /// <summary>
        /// Range of values controlling the particle end rotation.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Range<System.Single> EndRotation { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>RotationControllerContent</c>.
        /// <summary>
        public RotationControllerContent()
        {
            //EndRotation = (Nine.Range<System.Single>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Range<System.Single>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SizeController</c>.
    /// Defines a basic controller that changes the size of the particle effect based on time.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.SizeController, Nine")]
    public partial class SizeControllerContent
    {
        /// <summary>
        /// Range of values controlling the particle end size.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Range<System.Single> EndSize { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SizeControllerContent</c>.
        /// <summary>
        public SizeControllerContent()
        {
            //EndSize = (Nine.Range<System.Single>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Range<System.Single>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SpeedController</c>.
    /// Defines a basic controller that controls the acceleration of the particle effect.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.SpeedController, Nine")]
    public partial class SpeedControllerContent
    {
        /// <summary>
        /// Range of values representing the particle end speed in proportion to its start speed. A value of 1 means no change, a value of 0 means complete stop.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Nine.Range<System.Single> EndSpeed { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SpeedControllerContent</c>.
        /// <summary>
        public SpeedControllerContent()
        {
            //EndSpeed = (Nine.Range<System.Single>)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Nine.Range<System.Single>)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>SphereEmitter</c>.
    /// Defines a point emitter that emit particles from a sphere in 3D space.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.SphereEmitter, Nine")]
    public partial class SphereEmitterContent
    {
        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Center { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Direction { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Boolean Radiate { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Radius { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Boolean Shell { get; set; }

        /// <summary>
        /// 
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Spread { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>SphereEmitterContent</c>.
        /// <summary>
        public SphereEmitterContent()
        {
            //Center = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Direction = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Radiate = (System.Boolean)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Boolean)).ConvertFromString("");;
            //Radius = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Shell = (System.Boolean)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Boolean)).ConvertFromString("");;
            //Spread = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
        }
    }
    /// <summary>
    /// Content model for <c>TangentForceController</c>.
    /// Defines a basic controller that applies a constant tangent force on the particle effect.
    /// <summary>
    [System.CodeDom.Compiler.GeneratedCode("Content.Model.tt", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [Microsoft.Xna.Framework.Content.ContentSerializerRuntimeType("Nine.Graphics.ParticleEffects.TangentForceController, Nine")]
    public partial class TangentForceControllerContent
    {
        /// <summary>
        /// Gets or sets the center position.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Center { get; set; }

        /// <summary>
        /// Gets or sets the force amount.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public System.Single Force { get; set; }

        /// <summary>
        /// Gets or sets the up axis.
        /// <summary>
        [System.ComponentModel.DefaultValue("")]
        [Microsoft.Xna.Framework.Content.ContentSerializer(Optional = true)]
        public Microsoft.Xna.Framework.Vector3 Up { get; set; }

        /// <summary>
        /// Initializes a new instance of <c>TangentForceControllerContent</c>.
        /// <summary>
        public TangentForceControllerContent()
        {
            //Center = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
            //Force = (System.Single)System.ComponentModel.TypeDescriptor.GetConverter(typeof(System.Single)).ConvertFromString("");;
            //Up = (Microsoft.Xna.Framework.Vector3)System.ComponentModel.TypeDescriptor.GetConverter(typeof(Microsoft.Xna.Framework.Vector3)).ConvertFromString("");;
        }
    }
}
