//=============================================================================
//
//  Copyright 2011 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment DeferredLights;

[parameters]
float2 halfPixel;

texture2D LightTexture;
sampler LightSampler = sampler_state
{
    Texture = (LightTexture);
};

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float4 posProjection;	
	import(PositionProjection, posProjection = PositionProjection);
	
    posProjection.y = -posProjection.y;
    float2 lightUV = (posProjection.xy / posProjection.w) * 0.5f + 0.5f + halfPixel;
    float4 light = tex2D(LightSampler, lightUV);
    
	float4 color;
	float3 specularColor;
	float3 emissiveColor;

	import(Color, color = Color);
	import(SpecularColor, specularColor = SpecularColor);
	import(EmissiveColor, emissiveColor = EmissiveColor);
    
	color.xyz = color.xyz * (light.rgb + emissiveColor)  + light.a * specularColor;
	export(float4, Color, color);
}
__hlsl__