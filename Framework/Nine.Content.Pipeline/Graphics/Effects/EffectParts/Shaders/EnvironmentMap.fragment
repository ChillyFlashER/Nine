//=============================================================================
//
//  Copyright 2010 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment DirectionalLight;

[parameters]
float3 DirLightDirection = { 0, -0.707107, -0.707107 };
float3 DirLightDiffuseColor = { 1, 1, 1 };
float3 DirLightSpecularColor = { 1, 1, 1 };

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float specularPower;
	float3 normal;
	float3 positionToEye;
	float3 diffuse;
    float3 specular;

	import(LightDiffuse, diffuse = LightDiffuse);
	import(LightSpecular, specular = LightSpecular);
	import(SpecularPower, specularPower = SpecularPower);	
	import(Normal, normal = Normal);
	import(PositionToEye, positionToEye = PositionToEye);

    float3 L = -DirLightDirection;
    float3 H = normalize(positionToEye + L);
    float dt = max(0,dot(L, normal));
    
	diffuse += DirLightDiffuseColor * dt;
    if (dt != 0)
        specular += DirLightSpecularColor * pow(max(0.00001f,dot(H, normal)), specularPower);

	export(float3, LightDiffuse, diffuse);
	export(float3, LightSpecular, specular);
}
__hlsl__