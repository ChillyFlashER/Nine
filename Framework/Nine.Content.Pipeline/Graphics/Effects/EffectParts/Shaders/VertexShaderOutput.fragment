//=============================================================================
//
//  Copyright 2010 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment VertexShaderOutput;

[interpolators]
float4 Color : COLOR0;
float2 TexCoord;
float3 Normal;
float4 PositionWorld;
float4 PositionProjection;

[vs]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float4 color;
	import(Color, color = Color);
	output(Color, color);
		
	float3 normal;
	import(Normal, normal = Normal);
	output(Normal, normal);

	float2 uv;
	import(TexCoord, uv = TexCoord);
	output(TexCoord, uv);
		
	float4 position;
	import(Position, position = Position);
	output.position = position;

	float4 positionWorld;
	import(PositionWorld, positionWorld = PositionWorld);	
	output(PositionWorld, positionWorld);	
    
	output(PositionProjection, position);	
}
__hlsl__

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float4 color = input.Color;
	export(float4, Color, color);
	
	float3 normal = normalize(input.Normal);
	export(float3, Normal, normal);

	float2 uv = input.TexCoord;
	export(float2, TexCoord, uv);
	
	float4 positionWorld = input.PositionWorld;
	export(float4, PositionWorld, positionWorld);

	float4 positionProjection = input.PositionProjection;
	export(float4, PositionProjection, positionProjection);
    
    float specularPower = 1;
    float3 specularColor = 1;
    float3 emissiveColor = 0;

	export(float, SpecularPower, specularPower);
	export(float3, SpecularColor, specularColor);
	export(float3, EmissiveColor, emissiveColor);
}
__hlsl__