//=============================================================================
//
//  Copyright 2010 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment DirectionalLight;

[parameters]
float3 DirLightDirection = { 0, -0.707107, -0.707107 };
float3 DirLightDiffuseColor = { 1, 1, 1 };
float3 DirLightSpecularColor = { 1, 1, 1 };

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float specularPower;
	float3 normal;
	float3 positionToEye;
	float3 diffuse;
    float3 specular;

	import(LightDiffuse, diffuse = LightDiffuse);
	import(LightSpecular, specular = LightSpecular);
	import(SpecularPower, specularPower = SpecularPower);	
	import(Normal, normal = Normal);
	import(PositionToEye, positionToEye = PositionToEye);

	float3 L = -DirLightDirection;
    float dotL = dot(L, normal);
	float dotH = dot(normalize(positionToEye + L), normal);
	float zeroL = step(0, dotL);
    
	diffuse += DirLightDiffuseColor * zeroL * dotL;
    specular += DirLightSpecularColor * zeroL * pow(max(dotH, 0.000001), specularPower);

	export(float3, LightDiffuse, diffuse);
	export(float3, LightSpecular, specular);
}
__hlsl__