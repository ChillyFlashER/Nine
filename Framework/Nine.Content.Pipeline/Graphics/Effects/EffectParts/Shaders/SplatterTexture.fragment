//=============================================================================
//
//  Copyright 2010 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment SplatterTexture;

[textures]
texture2D TextureX;
texture2D TextureY;
texture2D TextureZ;
texture2D TextureW;


[parameters]
float2 SplatterTextureScale = 1;
float4 Mask = 1;

texture2D SplatterTexture;
sampler SplatterTextureSampler = sampler_state
{
    Texture = (SplatterTexture);
    MipFilter = Linear;
    MagFilter = Linear;
    MinFilter = Linear;
};

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float2 uv;
	import(TexCoord, uv = TexCoord);

	float4 color;
	import(Color, color = Color);
	
	float4 splatter = Mask * tex2D(SplatterTextureSampler, uv / SplatterTextureScale);
		
	color {$OPERATION}= tex2D(TextureX, uv) * splatter.x;
    color += tex2D(TextureY, uv) * splatter.y;
    color += tex2D(TextureZ, uv) * splatter.z;
    color += tex2D(TextureW, uv) * splatter.w;

	export(float4, Color, color);
}
__hlsl__