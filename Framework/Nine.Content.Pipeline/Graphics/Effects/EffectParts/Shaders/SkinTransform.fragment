//=============================================================================
//
//  Copyright 2010 (c) Engine Nine. All Rights Reserved.
//
//=============================================================================
fragment SkinTransform;

[vertex]
float4 BoneIndices	: BLENDINDICES0;
float4 BoneWeights	: BLENDWEIGHT0;

[parameters]
float4x3 Bones[{$MAXBONES}] : BONETRANSFORMS;

[vs]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{		
    // Blend between the weighted bone matrices.
    float4x3 skinTransform = 0;
    
    [unroll]
    for (int i = 0; i < {$BONECOUNT}; i++)
    {
		skinTransform += Bones[input.BoneIndices[i]] * input.BoneWeights[i];
    }

	export(float4x3, WorldTransform, skinTransform);
	
	float4 position;
	import(Position, position = Position);

	position.xyz = mul(position, skinTransform);
	export(float4, Position, position);

	float3 normal;
	import(Normal, normal = Normal);
	
	normal = mul(normal, (float3x3)skinTransform);
	export(float3, Normal, normal);
}
__hlsl__